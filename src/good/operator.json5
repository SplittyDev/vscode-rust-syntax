{
  "repository": {
    "operator": {
      "patterns": [
        {
          "name": "keyword.operator.member-access.rust",
          "match": "(\\.)(?=parse)",
        },
        {
          "name": "keyword.operator.member-access.rust",
          "match": "\\s(\\.)\\b",
        },
        {
          "name": "keyword.operator.member-access.rust",
          "match": "\\b(\\.)\\b",
        },
        {
          "name": "keyword.operator.member-access.rust",
          "match": "\\B(\\.)\\b",
        },
        {
          "name": "keyword.operator.member-access.rust",
          "match": "(\\.)(?=to_string)",
        },
        {
          "name": "keyword.operator.range.rust",
          "match": "(\\.\\.)",
        },
        // =============================================
        {
          "name": "keyword.operator.path.rust",
          "match": "(::)",
        },
        {
          "name": "keyword.operator.return-type.rust",
          "match": "(->)",
        },
        {
          "name": "keyword.operator.match.rust",
          "match": "(=>)",
        },
        {
          "name": "variable.language.ignored.rust",
          "match": "\\b(_)\\b",
        },
        // =============================================
        {
          "name": "keyword.operator.sigil.rust",
          "match": "[&*](?=[a-zA-Z0-9_\\(\\[\\|\\\"]+)",
        },
        {
          "name": "keyword.operator.assignment.rust",
          "match": "(\\=)",
        },
        {
          "name": "keyword.operator.assignment.rust",
          "match": "(\\+=|-=|/=|\\*=|%=|\\^=|&=|\\|=|<<=|>>=|=)",
        },
        {
          "name": "keyword.operator.arithmetic.rust",
          "match": "(!|\\+|-|/|\\*|%|\\^|&|\\||<<|>>)",
        },
        {
          "name": "keyword.operator.comparison.rust",
          "match": "(&&|\\|\\||==|!=)",
        },
        // {
        //   "name": "keyword.operator.comparison.rust",  // Second group because of regex precedence
        //   "match": "\\B(<=|>=|<|>)\\B",
        // },
        {
          "name": "keyword.operator.comparison.rust",  // Second group because of regex precedence
          "match": "\\s(<|>)",
        },
        {
          "name": "keyword.operator.comparison.rust",  // Second group because of regex precedence
          "match": "\\B(<=|>=)\\B",
        },
        // =============================================
        // {
        //   // "name": "string.quoted.double.rust",
        //   "begin": "^(use)\\s((\\w+)(::))+({)",
        //   "beginCaptures": {
        //     "1": {"name": "keyword.other.rust"},
        //     "2": {"name": "entity.name.type.module.rust"},
        //     "3": {"name": "entity.name.lifetime.rust"},
        //   },
        //   "end": "\"",
        //   "patterns": [
        //     {
        //       "name": "constant.character.escape.rust",
        //       "match": "\\\\(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)"
        //     },
        //     {
        //       "name": "constant.other.placeholder.rust",
        //       "match": "{}"
        //     },
        //     {
        //       "name": "constant.other.placeholder.rust",
        //       "match": "{:\\?}"
        //     },
        //   ]
        // },
      ]
    }
  }
}
